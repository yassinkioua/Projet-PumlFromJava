@startuml
'https://plantuml.com/class-diagram 
 skinparam classAttributeIconSize 0 
skinparam classFontStyle Bold
skinparam style strictuml
hide empty members
class Histoire4{ 
+ <<Create>> Histoire4()
+ {static} main(java.lang.String[]) : void

 } 
enum Genre <<enum>> { 
+ {static} values() : western.Genre[]
+ {static} valueOf(java.lang.String) : western.Genre
- <<Create>> Genre()

 } 
interface HorsLaLoi <<interface>> { 
+ {abstract} estLibre() : boolean
+ {abstract} getRecompense() : int
+ {abstract} kidnapper(western.Dame) : void
+ {abstract} seFaireCapturer(western.Cowboy) : void
+ {abstract} seFaireTirerDessus(western.Cowboy) : void
+ {abstract} getLook() : String 
+ {abstract} getCaptives() : java.util.List<western.Dame>

 } 
class Cowboy{ 
- gains : int
+ <<Create>> Cowboy(java.lang.String)
+ <<Create>> Cowboy(java.lang.String,western.Boisson)
+ getPseudo() : String 
+ liberer(western.Dame) : void
+ liberer(java.util.List<western.Dame>) : void
+ capturer(western.HorsLaLoi) : void
+ tirerSur(western.HorsLaLoi) : void
+ sePresenter() : void
+ {static} getBoissonParDefaut() : western.Boisson
+ {static} setBoissonParDefaut(western.Boisson) : void

 } 
interface Nommable <<interface>> { 
+ {abstract} getNom() : String 
+ {abstract} getPseudo() : String 

 } 
class Ripou{ 
+ <<Create>> Ripou(java.lang.String)
+ <<Create>> Ripou(java.lang.String,western.Boisson)
+ <<Create>> Ripou(java.lang.String,western.Boisson,java.lang.String)
+ getLook() : String 
+ estLibre() : boolean
+ getRecompense() : int
+ kidnapper(western.Dame) : void
+ getCaptives() : java.util.List<western.Dame>
+ seFaireCapturer(western.Cowboy) : void
+ seFaireTirerDessus(western.Cowboy) : void
+ getPseudo() : String 
+ sePresenter() : void
+ liberer(western.Dame) : void

 } 
class Dame{ 
- estLibre : boolean
+ <<Create>> Dame(java.lang.String)
+ <<Create>> Dame(java.lang.String,western.Boisson)
+ getPseudo() : String 
+ seFaireKidnapper(western.HorsLaLoi) : void
+ seFaireLiberer(western.Cowboy) : void
+ estLibre() : boolean
+ sePresenter() : void
+ {static} getBoissonParDefaut() : western.Boisson
+ {static} setBoissonParDefaut(western.Boisson) : void
+ getRavisseur() : western.HorsLaLoi

 } 
class Substantif{ 
+ <<Create>> Substantif(java.lang.String,western.Genre)
+ getNom() : String 
+ getGenre() : western.Genre
+ toString() : String 
+ {static} isVowel(char) : boolean
+ {static} startsWithVowel(java.lang.String) : boolean
+ getArticleIndefini() : String 
+ avecArticleIndefini() : String 
+ {static} getArticleDefini(western.Genre) : String 
+ getArticleDefini() : String 
+ avecArticleDefini() : String 
+ {static} faireElision(java.lang.String) : String 
+ elision() : boolean
+ getArticlePartitif() : String 
+ avecArticlePartitif() : String 
+ avecElision(java.lang.String) : String 
+ avecPreposition(java.lang.String) : String 

 } 
class Narrateur{ 
+ <<Create>> Narrateur()
+ <<Create>> Narrateur(java.lang.String)
+ dire(java.lang.String) : void
+ boire(western.Boisson) : void
+ boire() : void
+ getPseudo() : String 

 } 
abstract class Personnage{ 
+ <<Create>> Personnage(java.lang.String)
+ <<Create>> Personnage(java.lang.String,western.Boisson)
+ dire(java.lang.String) : void
+ sePresenter() : void
+ boire(western.Boisson) : void
+ boire() : void
+ getNom() : String 
+ getBoisson() : western.Boisson
+ {static} getPseudos(java.util.List<? extends western.Nommable>) : String 
+ {static} getBoissonParDefaut() : western.Boisson

 } 
class Brigand{ 
- recompense : int
- estLibre : boolean
+ <<Create>> Brigand(java.lang.String)
+ <<Create>> Brigand(java.lang.String,western.Boisson)
+ <<Create>> Brigand(java.lang.String,western.Boisson,java.lang.String)
+ getLook() : String 
+ getRecompense() : int
+ estLibre() : boolean
+ kidnapper(western.Dame) : void
+ seFaireCapturer(western.Cowboy) : void
+ seFaireTirerDessus(western.Cowboy) : void
+ getPseudo() : String 
+ getCaptives() : java.util.List<western.Dame>
+ sePresenter() : void
+ {static} getBoissonParDefaut() : western.Boisson
+ {static} setBoissonParDefaut(western.Boisson) : void

 } 
class Boisson{ 
+ <<Create>> Boisson(java.lang.String,western.Genre)
+ getNom() : String 
+ getGenre() : western.Genre
+ getNomAvecArticleIndefini() : String 
+ getNomAvecArticlePartitif() : String 
+ getNomAvecArticleDefini() : String 
+ getNomAvecPreposition(java.lang.String) : String 

 } 
@enduml
